diff --git a/src/AppBundle/Controller/Api/ApiBaseController.php b/src/AppBundle/Controller/Api/ApiBaseController.php
index b6b697d..0e4b03a 100644
--- a/src/AppBundle/Controller/Api/ApiBaseController.php
+++ b/src/AppBundle/Controller/Api/ApiBaseController.php
@@ -4,6 +4,8 @@ namespace AppBundle\Controller\Api;
 
 use Symfony\Bundle\FrameworkBundle\Controller\Controller;
 use Symfony\Component\Form\Form;
+use Symfony\Component\Form\FormInterface;
+use Symfony\Component\HttpFoundation\JsonResponse;
 use Symfony\Component\HttpFoundation\Request;
 
 abstract class ApiBaseController extends Controller
@@ -17,4 +19,32 @@ abstract class ApiBaseController extends Controller
         $data = json_decode($request->getContent(), true);
         $form->submit($data, !$request->isMethod('PATCH'));
     }
-}
\ No newline at end of file
+
+    protected function createFailedValidationResponse(Form $form)
+    {
+        $errors = $this->getErrorsFromForm($form);
+
+        return new JsonResponse([
+            'message' => 'Validation failed',
+            'errors' => $errors,
+        ], 400);
+    }
+
+    private function getErrorsFromForm(FormInterface $form)
+    {
+        $errors = array();
+        foreach ($form->getErrors() as $error) {
+            $errors[] = $error->getMessage();
+        }
+
+        foreach ($form->all() as $childForm) {
+            if ($childForm instanceof FormInterface) {
+                if ($childErrors = $this->getErrorsFromForm($childForm)) {
+                    $errors[$childForm->getName()] = $childErrors;
+                }
+            }
+        }
+
+        return $errors;
+    }
+}
diff --git a/src/AppBundle/Controller/Api/StudentController.php b/src/AppBundle/Controller/Api/StudentController.php
index 8dac3d6..66f7c5c 100644
--- a/src/AppBundle/Controller/Api/StudentController.php
+++ b/src/AppBundle/Controller/Api/StudentController.php
@@ -25,7 +25,7 @@ class StudentController extends ApiBaseController
         $this->submitForm($request, $form);
 
         if (!$form->isValid()) {
-            throw new BadRequestHttpException();
+            return $this->createFailedValidationResponse($form);
         }
 
         /** @var Student $student */
@@ -53,7 +53,7 @@ class StudentController extends ApiBaseController
         $this->submitForm($request, $form);
 
         if (!$form->isValid()) {
-            throw new BadRequestHttpException();
+            return $this->createFailedValidationResponse($form);
         }
 
         $em = $this->getDoctrine()->getManager();
